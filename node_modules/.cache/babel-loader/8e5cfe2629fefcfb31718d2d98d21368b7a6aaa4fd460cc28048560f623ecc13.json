{"ast":null,"code":"import axios from \"axios\";\nimport { BASE_API } from \"../shared/constants/app\";\nimport { store } from \"../redux-setup/store\";\nconst Http = axios.create({\n  baseURL: BASE_API\n});\nHttp.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  const Auth = store.getState().Auth;\n  const token = Auth.login.currentCustomer.accessToken;\n  config.headers[\"token\"] = `Bearer ${token}`;\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n});\nexport default Http;","map":{"version":3,"names":["axios","BASE_API","store","Http","create","baseURL","interceptors","request","use","config","Auth","getState","token","login","currentCustomer","accessToken","headers","error","Promise","reject"],"sources":["C:/Users/Admin/Desktop/Junior 239/frontend/src/services/Http.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { BASE_API } from \"../shared/constants/app\";\r\nimport {store} from \"../redux-setup/store\"\r\nconst Http = axios.create({\r\n    baseURL: BASE_API,\r\n});\r\nHttp.interceptors.request.use(function (config) {\r\n    // Do something before request is sent\r\n    const Auth =  store.getState().Auth\r\n    const token = Auth.login.currentCustomer.accessToken\r\n    config.headers[\"token\"] = `Bearer ${token}`\r\n    return config;\r\n}, function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n});\r\nexport default Http;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAAQC,KAAK,QAAO,sBAAsB;AAC1C,MAAMC,IAAI,GAAGH,KAAK,CAACI,MAAM,CAAC;EACtBC,OAAO,EAAEJ;AACb,CAAC,CAAC;AACFE,IAAI,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAAUC,MAAM,EAAE;EAC5C;EACA,MAAMC,IAAI,GAAIR,KAAK,CAACS,QAAQ,CAAC,CAAC,CAACD,IAAI;EACnC,MAAME,KAAK,GAAGF,IAAI,CAACG,KAAK,CAACC,eAAe,CAACC,WAAW;EACpDN,MAAM,CAACO,OAAO,CAAC,OAAO,CAAC,GAAI,UAASJ,KAAM,EAAC;EAC3C,OAAOH,MAAM;AACjB,CAAC,EAAE,UAAUQ,KAAK,EAAE;EAChB;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AACF,eAAed,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}
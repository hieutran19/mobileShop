{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  login: {\n    currentCustomer: null,\n    logged: false,\n    error: false\n  }\n};\nconst authReducer = createSlice({\n  name: \"authReducer\",\n  initialState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.login.currentCustomer = action.payload;\n      state.login.logged = true;\n    },\n    loginFail: (state, action) => {\n      state.login.error = true;\n    },\n    loggedOut: (state, action) => {\n      state.login.currentCustomer = null;\n      state.login.logged = false;\n      state.login.error = false;\n    },\n    updateSuccess: (state, action) => {\n      state.login.currentCustomer = action.payload;\n    },\n    updateCustomerToken: (state, action) => {\n      state.login.currentCustomer.accessToken = action.payload.newAccsessToken;\n      state.login.currentCustomer.refreshToken = action.payload.newRefreshToken;\n    }\n  }\n});\nexport const {\n  loginSuccess,\n  loggedOut,\n  loginFail,\n  updateSuccess,\n  updateCustomerToken\n} = authReducer.actions;\nexport default authReducer.reducer;","map":{"version":3,"names":["createSlice","initialState","login","currentCustomer","logged","error","authReducer","name","reducers","loginSuccess","state","action","payload","loginFail","loggedOut","updateSuccess","updateCustomerToken","accessToken","newAccsessToken","refreshToken","newRefreshToken","actions","reducer"],"sources":["C:/Users/ADMIN/Downloads/Junior 239/Junior 239/frontend/src/redux-setup/reducers/auth.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\" ;\r\nconst initialState = {\r\n    login:{\r\n        currentCustomer : null,\r\n        logged: false,\r\n        error: false,\r\n    }\r\n}\r\nconst authReducer = createSlice({\r\n    name: \"authReducer\",\r\n    initialState,\r\n    reducers:{\r\n        loginSuccess: (state, action)=>{\r\n            state.login.currentCustomer = action.payload\r\n            state.login.logged = true;\r\n        },\r\n        loginFail: (state, action)=>{\r\n            state.login.error = true;\r\n        },\r\n        loggedOut: (state, action)=>{\r\n            state.login.currentCustomer = null;\r\n            state.login.logged = false;\r\n            state.login.error = false;\r\n        },\r\n        updateSuccess:(state, action)=>{\r\n            state.login.currentCustomer = action.payload\r\n        },\r\n        updateCustomerToken:(state,action)=>{\r\n            state.login.currentCustomer.accessToken = action.payload.newAccsessToken;\r\n            state.login.currentCustomer.refreshToken = action.payload.newRefreshToken;\r\n        }\r\n    }\r\n});\r\nexport const {loginSuccess,loggedOut,loginFail, updateSuccess,updateCustomerToken } = authReducer.actions;\r\nexport default authReducer.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAC;IACFC,eAAe,EAAG,IAAI;IACtBC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE;EACX;AACJ,CAAC;AACD,MAAMC,WAAW,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,aAAa;EACnBN,YAAY;EACZO,QAAQ,EAAC;IACLC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAG;MAC3BD,KAAK,CAACR,KAAK,CAACC,eAAe,GAAGQ,MAAM,CAACC,OAAO;MAC5CF,KAAK,CAACR,KAAK,CAACE,MAAM,GAAG,IAAI;IAC7B,CAAC;IACDS,SAAS,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAG;MACxBD,KAAK,CAACR,KAAK,CAACG,KAAK,GAAG,IAAI;IAC5B,CAAC;IACDS,SAAS,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAG;MACxBD,KAAK,CAACR,KAAK,CAACC,eAAe,GAAG,IAAI;MAClCO,KAAK,CAACR,KAAK,CAACE,MAAM,GAAG,KAAK;MAC1BM,KAAK,CAACR,KAAK,CAACG,KAAK,GAAG,KAAK;IAC7B,CAAC;IACDU,aAAa,EAACA,CAACL,KAAK,EAAEC,MAAM,KAAG;MAC3BD,KAAK,CAACR,KAAK,CAACC,eAAe,GAAGQ,MAAM,CAACC,OAAO;IAChD,CAAC;IACDI,mBAAmB,EAACA,CAACN,KAAK,EAACC,MAAM,KAAG;MAChCD,KAAK,CAACR,KAAK,CAACC,eAAe,CAACc,WAAW,GAAGN,MAAM,CAACC,OAAO,CAACM,eAAe;MACxER,KAAK,CAACR,KAAK,CAACC,eAAe,CAACgB,YAAY,GAAGR,MAAM,CAACC,OAAO,CAACQ,eAAe;IAC7E;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAACX,YAAY;EAACK,SAAS;EAACD,SAAS;EAAEE,aAAa;EAACC;AAAoB,CAAC,GAAGV,WAAW,CAACe,OAAO;AACzG,eAAef,WAAW,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\"; // Sử dụng jwtDecode để giải mã token\nimport { BASE_API } from \"../shared/constants/app\";\nimport { store } from \"../redux-setup/store\";\nimport { loggedOut, updateCustomerToken } from \"../redux-setup/reducers/auth\";\nimport { refreshToken } from \"./Api\";\nconst Http = axios.create({\n  withCredentials: true,\n  baseURL: BASE_API\n});\nHttp.interceptors.request.use(async function (config) {\n  var _store$getState$Auth$, _store$getState$Auth$2;\n  // Do something before request is sent\n  const token = (_store$getState$Auth$ = store.getState().Auth.login.currentCustomer) === null || _store$getState$Auth$ === void 0 ? void 0 : (_store$getState$Auth$2 = _store$getState$Auth$.customer) === null || _store$getState$Auth$2 === void 0 ? void 0 : _store$getState$Auth$2.accsessToken;\n  if (token) {\n    const decoded = jwtDecode(token);\n    if (decoded.exp * 1000 < Date.now()) {\n      store.dispatch(loggedOut());\n      if (config.url.indexOf(\"/customer/refreshtoken\") >= 0) return config;\n      const data = (await refreshToken()).data;\n      const newAccessToken = data.accsessToken;\n      const newRefreshToken = data.refreshToken;\n      console.log(`newAccessToken::${newAccessToken}`);\n      store.dispatch(updateCustomerToken({\n        newAccessToken,\n        newRefreshToken\n      }));\n      config.headers[\"token\"] = `Bearer ${newAccessToken}`;\n    } else {\n      config.headers[\"token\"] = `Bearer ${token}`;\n    }\n  }\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n});\nHttp.interceptors.response.use(async response => {\n  if (response.data.message === \"Token Expired\") {\n    if (response.config.url.indexOf(\"/customer/refreshtoken\") >= 0) return response;\n    const data = (await refreshToken()).data;\n    const newAccessToken = data.accsessToken;\n    const newRefreshToken = data.refreshToken;\n    console.log(`newAccessToken::${newAccessToken}`);\n    store.dispatch(updateCustomerToken({\n      newAccessToken,\n      newRefreshToken\n    }));\n    response.config.headers[\"token\"] = `Bearer ${newAccessToken}`;\n    return Http(response.config);\n  }\n  return response;\n}, async error => {\n  return Promise.reject(error);\n});\nexport default Http;","map":{"version":3,"names":["axios","jwtDecode","BASE_API","store","loggedOut","updateCustomerToken","refreshToken","Http","create","withCredentials","baseURL","interceptors","request","use","config","_store$getState$Auth$","_store$getState$Auth$2","token","getState","Auth","login","currentCustomer","customer","accsessToken","decoded","exp","Date","now","dispatch","url","indexOf","data","newAccessToken","newRefreshToken","console","log","headers","error","Promise","reject","response","message"],"sources":["C:/Users/ADMIN/Downloads/Junior 239/Junior 239/frontend/src/services/Http.js"],"sourcesContent":["import axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\"; // Sử dụng jwtDecode để giải mã token\r\nimport { BASE_API } from \"../shared/constants/app\";\r\nimport { store } from \"../redux-setup/store\";\r\nimport { loggedOut, updateCustomerToken } from \"../redux-setup/reducers/auth\";\r\nimport { refreshToken } from \"./Api\";\r\n\r\nconst Http = axios.create({\r\n    withCredentials: true,\r\n    baseURL: BASE_API,\r\n});\r\n\r\nHttp.interceptors.request.use(async function (config) {\r\n    // Do something before request is sent\r\n    const token = store.getState().Auth.login.currentCustomer?.customer?.accsessToken;\r\n    \r\n    if (token) {\r\n        const decoded = jwtDecode(token);\r\n        if (decoded.exp * 1000 < Date.now()) {\r\n            store.dispatch(loggedOut());\r\n            if (config.url.indexOf(\"/customer/refreshtoken\") >= 0) return config;\r\n            const data = (await refreshToken()).data;\r\n            const newAccessToken = data.accsessToken;\r\n            const newRefreshToken = data.refreshToken;\r\n            console.log(`newAccessToken::${newAccessToken}`);\r\n            store.dispatch(updateCustomerToken({ newAccessToken, newRefreshToken }));\r\n            config.headers[\"token\"] = `Bearer ${newAccessToken}`;\r\n        } else {\r\n            config.headers[\"token\"] = `Bearer ${token}`;\r\n        }\r\n    }\r\n    \r\n    return config;\r\n}, function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n});\r\n\r\nHttp.interceptors.response.use(\r\n    async (response) => {\r\n        if (response.data.message === \"Token Expired\") {\r\n            if (response.config.url.indexOf(\"/customer/refreshtoken\") >= 0) return response;\r\n            const data = (await refreshToken()).data;\r\n            const newAccessToken = data.accsessToken;\r\n            const newRefreshToken = data.refreshToken;\r\n            console.log(`newAccessToken::${newAccessToken}`);\r\n            store.dispatch(updateCustomerToken({ newAccessToken, newRefreshToken }));\r\n            response.config.headers[\"token\"] = `Bearer ${newAccessToken}`;\r\n            return Http(response.config);\r\n        }\r\n        return response;\r\n    },\r\n    async (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default Http;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}